buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

idea{
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

import de.undercouch.gradle.tasks.download.Download

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'

version = "1.2.1"
group= "com.Zoko061602.SuperTic" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SuperTic[1.7.10]"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

repositories{
	mavenLocal()
    maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
    }
	maven {
		name = "progwml6"
		url = "https://dvs1.progwml6.com/files/maven"
	}
    maven {
        name 'Forge' // Applied Energistics
        url 'http://files.minecraftforge.net/maven'
    }
    maven { // GalacticGreg, YAMCore,..
        name 'UsrvDE'
        url "http://jenkins.usrv.eu:8081/nexus/content/repositories/releases/"
    }
    maven { // Baubles
    	name 'UsrvDE_3rdParty'
    	url "http://jenkins.usrv.eu:8081/nexus/content/repositories/thirdparty/"
    }
	maven { // NEI, CodeChickenCore, CodeChickenLib
    	name 'codechicken'
    	url "http://chickenbones.net/maven"
    }
	
}

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    compile "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
	compile "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"
	compile "com.wayoftime.bloodmagic:BloodMagic:1.7.10-1.3.3-18:deobf"
	compile "tconstruct:TConstruct:1.7.10-1.8.8.build1003:deobf"
	
    compile fileTree(dir: 'libs', include: '*.jar')
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}
task getCoFH(type: Download) {
    onlyIf {
        !file("libs/CoFHCore-%5b1.7.10%5d3.0.3B4-302-dev.jar").exists()
    }
    src "https://maven.cil.li/CoFHCore/%5b1.7.10%5d3.0.3B4-302-dev/CoFHCore-%5b1.7.10%5d3.0.3B4-302-dev.jar"
    dest file("libs/CoFHCore-%5b1.7.10%5d3.0.3B4-302-dev.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

artifacts {
    archives devJar
    archives sourceJar
}